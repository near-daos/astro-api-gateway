version: '3.1'

services:
  postgres:
    image: postgres
    restart: always
    ports:
      - '5437:5432'
    volumes:
      - pg-data:/data/postgres
    env_file:
      - .env.docker-dev
    networks:
      - postgres

  mongo:
    image: mongo:5.0
    restart: always
    ports:
      - 27021:27017
    volumes:
      - mongodb_data_container:/data/db
    environment:
      - MONGO_INITDB_ROOT_DATABASE=draft
      - MONGO_INITDB_ROOT_USERNAME=draft
      - MONGO_INITDB_ROOT_PASSWORD=draft

  pgadmin:
    links:
      - postgres:postgres
    image: dpage/pgadmin4
    ports:
      - '8080:80'
    volumes:
      - pg-data:/root/.pgadmin
    env_file:
      - .env.docker-dev
    networks:
      - postgres

  redis:
    image: 'redis:alpine'
    env_file:
      - .env.docker-dev
    ports:
      - '6379:6379'
    networks:
      - redis

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - redis

  dynamodb:
    image:  amazon/dynamodb-local
    container_name: dynamodb
    hostname: dynamodb
    restart: always
    volumes:
      -  ./dynamodb-data:/home/dynamodblocal/data
    ports:
      - 8000:8000
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/"

volumes:
  pg-data:
  mongodb_data_container:

networks:
  postgres:
    driver: bridge
  redis:
    driver: bridge

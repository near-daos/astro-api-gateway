# Default values for sputnik-v2-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 570288326086.dkr.ecr.us-east-1.amazonaws.com
  tag: latest
  name: astro-notifier
  pullPolicy: Always

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

aggregatorNameOverride: "sputnik-v2-aggregator"
aggregatorFullnameOverride: "sputnik-v2-aggregator"

aggregatorDaoNameOverride: "sputnik-v2-aggregator-dao"
aggregatorDaoFullnameOverride: "sputnik-v2-aggregator-dao"

notifierNameOverride: "astro-notifier"
notifierFullnameOverride: "astro-notifier"

container:
  # Specifies the internal container port
  internalPort: 3000
  # Specifies the endpoint for liveness checks
  livenessProbe:
    failureThreshold: 10
    initialDelaySeconds: 90
    periodSeconds: 60
    successThreshold: 1
    timeoutSeconds: 60
    port: 3000
    path: /api/v1
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 20
    periodSeconds: 60
    successThreshold: 1
    timeoutSeconds: 60
    port: 3000
    path: /api/v1

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  host: "sputnik-v2-api-host"

resources:
  limits:
    memory: 300Mi
  requests:
    cpu: 20m
    memory: 300Mi

nodeSelector: {}

tolerations: []

affinity: {}

version:
  commit: latest
  branch: develop

environment:
  AGGREGATOR_EXPIRED_PROPOSALS_POLLING_INTERVAL: "60000"
  AGGREGATOR_TOKEN_PRICES_POLLING_INTERVAL: "100000"

name: Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Specify environment to run on. Valid values are develop, qa, test, staging, production
      tag:
        required: true
        description: Docker tag to deploy. Valid values are "latest", "<branch>-latest", "<commit_sha>", "<environment>-<commit_sha>". Exact values can be found in "Docker Build Publish" step of "Build Deploy" job.
        default: latest
      apps:
        required: false
        default: aggregator api draft notifier
        description: List of application to deploy (space separated).

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ECR_URL: ${{ secrets.AWS_ECR_URL }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  KUBE_CONFIG_DATA:  ${{ secrets.KUBE_CONFIG_DATA }}
  NOTIFI_SID:  ${{ secrets.NOTIFI_SID }}
  NOTIFI_SECRET:  ${{ secrets.NOTIFI_SECRET }}

jobs:
  get-updated-apps:
    name: Get Updated Apps
    runs-on: ubuntu-latest
    outputs:
      updated-apps: ${{ steps.updated-apps.outputs.apps }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - id: updated-apps
      shell: bash
      run: |
        array_to_json () {
          echo "[$(echo $1 | xargs | sed -e 's| |", "|g;s|.*|"&"|')]"
        }
        echo "List of apps was provided manually: ${{ github.event.inputs.apps }}"
        export UPDATED_APPS=$(array_to_json "${{ github.event.inputs.apps }}")
        echo "::set-output name=apps::$UPDATED_APPS"

  helm-deploy:
    name: Helm Deploy
    runs-on: ubuntu-latest
    needs:
    - get-updated-apps
    strategy:
      matrix:
        app: ${{ fromJSON(needs.get-updated-apps.outputs.updated-apps) }}
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
    - uses: actions/checkout@v2
    - name: Set Environment
      run: |
        echo DOCKER_ENV_TAG=${{ github.event.inputs.tag }} >> $GITHUB_ENV
        cat ".github/env.common" | grep -E -v '^\ *#' >>$GITHUB_ENV
        cat ".github/env.${{ github.event.inputs.environment }}" | grep -E -v '^\ *#' >>$GITHUB_ENV
    - name: Helm Deploy
      uses: koslib/helm-eks-action@v1.8.0
      with:
        command: |
          export CHART_FOLDER=apps/${{ matrix.app }}/deployment/app-chart
          helm lint $CHART_FOLDER
          helm -n $DEPLOYMENT_NAMESPACE upgrade --install --wait --timeout 10m sputnik-v2-${{ matrix.app }} $CHART_FOLDER \
            --set image.tag=$DOCKER_ENV_TAG \
            --set environment.near_env=$NEAR_ENV \
            --set environment.near_contract_name=$NEAR_CONTRACT_NAME \
            --set environment.near_token_factory_contract_name=$NEAR_TOKEN_FACTORY_CONTRACT_NAME \
            --set environment.near_bridge_token_factory_contract_name=$NEAR_BRIDGE_TOKEN_FACTORY_CONTRACT_NAME \
            --set environment.wallet_callback_url=$WALLET_CALLBACK_URL \
            --set environment.frontend_url=$FRONTEND_URL \
            --set environment.near_token_api_url=$NEAR_TOKEN_API_URL \
            --set environment.api_rate_ttl=$API_RATE_TTL \
            --set environment.api_rate_limit=$API_RATE_LIMIT \
            --set environment.admin_accounts=$ADMIN_ACCOUNTS \
            --set environment.notifi_sid=$NOTIFI_SID \
            --set environment.notifi_secret=$NOTIFI_SECRET \
            --set environment.notifi_env=$NOTIFI_ENV \
            --set environment.notifi_prefix=$NOTIFI_PREFIX \
            --set ingress.host=$K8S_INGRESS_HOST

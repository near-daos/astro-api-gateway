name: Run Autotests
on:
  workflow_dispatch:
    inputs:
      environment:
        required: false
        default: develop
        description: Specify environment to run on. Valid values are develop, test
  workflow_call:
    inputs:
      environment:
        required: true
        default: develop
        description: Specify environment to run on. Valid values are develop, test
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
         required: true
      AWS_SECRET_ACCESS_KEY:
         required: true
      NEAR_ACCOUNT_ID:
         required: true
      NEAR_PUBLIC_KEY:
         required: true
      NEAR_PRIVATE_KEY:
         required: true
      KUBE_CONFIG_DATA:
         required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      if: env.GITHUB_WORKFLOW == 'Run Autotests'
    - uses: actions/checkout@v2
      with:
        ref: develop
      if: env.GITHUB_WORKFLOW != 'Run Autotests'

    - name: Set Environment
      id: set_environment
      run: |
        if [[ "${{ github.event.inputs.environment }}" != '' ]]
        then
          echo "Environment ${{ github.event.inputs.environment }} was provided manually"
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >>$GITHUB_ENV
          export ENVIRONMENT=${{ github.event.inputs.environment }}
        else
          echo "Environment ${{ inputs.environment }} was provided by parent workflow"
          echo "ENVIRONMENT=${{ inputs.environment }}" >>$GITHUB_ENV
          export ENVIRONMENT=${{ inputs.environment }}
        fi
        cat ".github/env.common" | grep -E -v '^\ *#' >>$GITHUB_ENV
        cat ".github/env.$ENVIRONMENT" | grep -E -v '^\ *#' >>$GITHUB_ENV
        echo "::set-output name=workflow_name::${GITHUB_WORKFLOW// /-}"
        echo "::set-output name=environment::${ENVIRONMENT}"

    - name: Execute Tests
      uses: ./.github/actions/test
      with:
        environment: ${{ steps.set_environment.outputs.environment }}
        env: ${{ env.TEST_ENV_NAME }}
        NEAR_ACCOUNT_ID: ${{ secrets.NEAR_ACCOUNT_ID }}
        NEAR_PUBLIC_KEY: ${{ secrets.NEAR_PUBLIC_KEY }}
        NEAR_PRIVATE_KEY: ${{ secrets.NEAR_PRIVATE_KEY }}

    - uses: actions/upload-artifact@v2
      with:
        name: allure_report
        path: test-framework/build/reports/allure-report/**

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - uses: Consensys/kubernetes-action@1.1.0
      id: kubectl
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: -n sputnik-v2-development get pods --selector=app.kubernetes.io/instance=automation-report -o jsonpath='{.items[0].metadata.name}'

    - name: Clean Output
      id: get_pod
      shell: bash
      run: |
        clean_output=$(printf ${{steps.kubectl.outputs.result}} | tr -t "'" "")
        echo "pod name is $clean_output"
        echo "::set-output name=kubectl-out::$clean_output"

    - name: Generate Upload Bundle
      shell: bash
      run: |
        if [ "${ACTIONS_RUNNER_DEBUG:-}" = "true" ]; then
          find ./
          set -x
        fi
        sudo mkdir test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}
        sudo cp -r test-framework/build/reports/allure-report test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/
        sudo cp -r test-framework/build/swagger-coverage-output test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/
        sudo find test-framework/build -name swagger-coverage-report.html -exec cp '{}' test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/swagger-coverage-output/index.html \;
        sudo find test-framework/build -name swagger-coverage-results.json -exec cp '{}' test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/swagger-coverage-output/ \;
        cat .github/actions/test/reports-site/HEADER.html.template | envsubst | sudo tee test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/HEADER.html

    - uses: actions/upload-artifact@v2
      with:
        name: coverage_report
        path: test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/swagger-coverage-output/**

    - uses: Consensys/kubernetes-action@1.1.0
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: cp -n sputnik-v2-development test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }} ${{ steps.get_pod.outputs.kubectl-out }}:/app/${{ steps.set_environment.outputs.environment }}

    - uses: Consensys/kubernetes-action@1.1.0
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: cp -n sputnik-v2-development test-framework/build/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/allure-report/history ${{ steps.get_pod.outputs.kubectl-out }}:/app/${{ steps.set_environment.outputs.environment }}/

    - name: Add Annotation
      run: |
        echo "::notice title=Allure Report::https://automation-report.app.astrodao.com/${{ steps.set_environment.outputs.environment }}/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/allure-report/"
        echo "::notice title=Coverage Report::https://automation-report.app.astrodao.com/${{ steps.set_environment.outputs.environment }}/${{ steps.set_environment.outputs.workflow_name }}-${{ github.run_number }}/swagger-coverage-output/"
        echo "::notice title=History for Environment::https://automation-report.app.astrodao.com/${{ steps.set_environment.outputs.environment }}/"

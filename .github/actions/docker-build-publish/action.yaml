name: 'Docker Build Publish'
runs:
  using: 'composite'
  steps:
#  - name: Cache Docker layers
#    uses: actions/cache@v2
#    with:
#      path: /tmp/.buildx-cache-sputnik-v2-${{ env.APP_NAME }}
#      key: ${{ runner.os }}-sputnik-v2-${{ env.APP_NAME }}-${{ github.sha }}
#      restore-keys: |
#        ${{ runner.os }}-sputnik-v2-${{ env.APP_NAME }}

  - name: Docker meta
    id: meta
    uses: docker/metadata-action@v3
    with:
      images: |
        ${{ env.AWS_ECR_URL }}/astro-${{ env.APP_NAME }}
      tags: |
        type=raw,value=latest
        type=ref,event=branch,suffix=-latest
        type=sha,prefix=,format=long

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v1

  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      aws-region: ${{ env.AWS_DEFAULT_REGION }}

  - name: Login to ECR
    uses: aws-actions/amazon-ecr-login@v1

  - name: Build And Push
    uses: docker/build-push-action@v2
    with:
      context: .
      file: Dockerfile
      platforms: linux/amd64
      tags: ${{ steps.meta.outputs.tags }}
      push: true
      build-args: APP_NAME=${{ env.APP_NAME }}
#      cache-from: type=local,src=/tmp/.buildx-cache-sputnik-v2-${{ env.APP_NAME }}
#      cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-sputnik-v2-${{ env.APP_NAME }}-new

#  - name: Move cache
#    shell: bash
#    run: |
#      rm -rf /tmp/.buildx-cache-sputnik-v2-${{ env.APP_NAME }}
#      mv /tmp/.buildx-cache-sputnik-v2-${{ env.APP_NAME }}-new /tmp/.buildx-cache-sputnik-v2-${{ env.APP_NAME }}
